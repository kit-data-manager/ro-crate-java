plugins {
    id 'java'
    id 'jvm-test-suite'

    id 'jacoco'
    // Adds coveralls task for CI to send results to the coveralls service.
    id "com.github.kt3k.coveralls" version "2.12.0"

    // Instructions: https://github.com/researchgate/gradle-release
    // Available versions: https://plugins.gradle.org/plugin/net.researchgate.release
    id 'net.researchgate.release' version '3.0.2'
    id "maven-publish"
    // Publishing of JAR to Nexus instances (e.g., OSSRH)
    // https://github.com/gradle-nexus/publish-plugin
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

group 'edu.kit.datamanager'
description = "A library for easy creation and modification of valid RO-Crates."

repositories {
    mavenCentral()
}

dependencies {
    // JUnit setup for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    // JSON object mapping / (de-)serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.4'
    // http client
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    // common file system operations
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    // read from and write to zip files
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.11.2'
    // compare json documents in tests
    implementation 'com.github.fslev:json-compare:4.5'
    // url validator
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
    // logging
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '2.0.1'
    // JSON-LD, Zenodo mapping
    implementation group: 'com.apicatalog', name: 'titanium-json-ld', version: '1.3.1'
    // metadata validation, profiles based on JSON schema
    implementation group: "com.networknt", name: "json-schema-validator", version: "1.0.72"
    implementation 'org.glassfish:jakarta.json:2.0.1'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }

    test {
        java {
            // compileClasspath += sourceSets.main.output
            //runtimeClasspath += sourceSets.main.output
            srcDirs = ['src/test/java']
        }
    }

    performanceTest {
        java {
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            srcDirs = ['src/performanceTest/java']
        }
    }
}

configurations {
    performanceTestImplementation.extendsFrom implementation
}


task performanceContextEntitiesBenchmark(type: JavaExec) {
    description = "Run the context entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.singlecratebenchmarks.ContextualEntitiesPerformance'
}

task performanceLocalDataEntitiesBenchmark(type: JavaExec) {
    description = "Run the local data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.singlecratebenchmarks.LocalDataEntitiesPerformance'
}

task performanceRemoteDataEntitiesBenchmark(type: JavaExec) {
    description = "Run the remote data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.singlecratebenchmarks.RemoteDataEntitiesPerformance'
}

task performanceMixEntitiesBenchmark(type: JavaExec) {
    description = "Run the remote data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.singlecratebenchmarks.MixtureOfEntitiesPerformance'
}
task performanceDeletionEntitiesBenchmark(type: JavaExec) {
    description = "Run the remote data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.singlecratebenchmarks.DeletionEntitiesPerformance'
}

task performanceMultipleCratesBenchmark(type: JavaExec) {
    description = "Run the remote data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.multiplecrates.MultipleCratesBenchmark'
}

task performanceReadWriteMultipleCratesBenchmark(type: JavaExec) {
    description = "Run the remote data entities benchmarks."
    classpath = sourceSets.performanceTest.runtimeClasspath
    mainClass = 'edu.kit.datamanager.ro_crate.multiplecrates.MultipleCratesWriteAndRead'
}
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
        xml.required = true // coveralls plugin depends on xml format report
    }
}

jacoco {
    toolVersion = "0.8.8"
}

// maxParallelForks(2)
// failFast = true

if (project.hasProperty('release')) {
    println 'Using release profile for building ' + project.getName()
    apply from: 'gradle/profile-release.gradle'
}
